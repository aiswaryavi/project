/*
	JavaScript code to view and rotate the cube
*/

var container;
var camera, scene, renderer, controls;
var mesh;
var rotating=0;

init();

function init() {
	//to create container inside which the 3D scene is rendered
	container = document.createElement('div');
	container.style.width = "72.3%";
	container.style.height = "74.03%";
	container.style.marginTop = "3%";
	container.style.marginBottom = "3%";
	container.style.position = "absolute";
	
	container.setAttribute("id","canvas");
	container.setAttribute("width","72.3%");
	container.setAttribute("height","74.03%");

	document.body.appendChild( container );

	//definition of renderer
	var r_width = parseInt(document.getElementById("canvas").getAttribute("width"));
	var r_height = parseInt(document.getElementById("canvas").getAttribute("height"));
	console.log(r_width);
	renderer = new THREE.WebGLRenderer();
	renderer.setSize( r_width, r_height );
	renderer.setClearColor( 0x444444 );
	renderer.setPixelRatio( window.devicePixelRatio );

	//to create "help" bar
	var legend = document.createElement('div');
	
	legend.setAttribute("id","legend");
	
	legend.style.width = 0.21*parseInt(document.getElementById("canvas").getAttribute("width")) + "px";
	legend.style.height = 0.16*parseInt(document.getElementById("canvas").getAttribute("height")) + "px";
	legend.innerHTML = "<code><p align='left' style='margin-left: 4px'>Help<br><br>Right Click : Rotate<br>Scroll : Zoom In/Out<br>Click on a face to upload photo</p></code>";

	//to create start/stop button
	var playButton = document.createElement('button');
	
	playButton.setAttribute("onclick","toggle()");
	playButton.setAttribute("class","toggleButton");
	
	playButton.innerHTML = "<small>TOGGLE ROTATION ON/OFF</small>";

	container.appendChild( renderer.domElement );
	container.appendChild( legend );
	container.appendChild( playButton );

	//definition of scene, camera and controls
	scene = new THREE.Scene();

	camera = new THREE.PerspectiveCamera( 45, r_width / r_height , 1, 1000 );
	camera.position.set( 150, 150, 350 );

	controls = new THREE.TrackballControls( camera, renderer.domElement );
	controls.minDistance = 250;
	controls.maxDistance = 800;
	controls.rotateSpeed = 2.0;
	controls.zoomSpeed = 0.5;
	controls.noPan = true;

	scene.add( new THREE.AmbientLight( 0xffffff ) );

	//to create the cube
	var geometry = new THREE.BoxGeometry( 150, 150, 150 );
	
	var texture1 = new THREE.TextureLoader().load( "images/cube1.jpg" );
	var texture2 = new THREE.TextureLoader().load( "images/cube2.jpg" );
	var texture3 = new THREE.TextureLoader().load( "images/cube3.jpg" );
	var texture4 = new THREE.TextureLoader().load( "images/cube4.jpg" );
	var texture5 = new THREE.TextureLoader().load( "images/cube5.jpg" );
	var texture6 = new THREE.TextureLoader().load( "images/cube6.jpg" );

	var material1 = new THREE.MeshPhongMaterial( { map: texture1 } );
	var material2 = new THREE.MeshPhongMaterial( { map: texture2 } );
	var material3 = new THREE.MeshPhongMaterial( { map: texture3 } );
	var material4 = new THREE.MeshPhongMaterial( { map: texture4 } );
	var material5 = new THREE.MeshPhongMaterial( { map: texture5 } );
	var material6 = new THREE.MeshPhongMaterial( { map: texture6 } );

	var materials = [material1, material2, material3, material4, material5, material6];
	var material = new THREE.MeshFaceMaterial( materials );
	
	mesh = new THREE.Mesh( geometry, material );

	scene.add( mesh );
	renderer.render(scene,camera);
	animate();
}

function animate() {
	//function to animate the scene
	requestAnimationFrame( animate );

	if(rotating==1){
		mesh.rotation.x += 0.01;
		mesh.rotation.y += 0.02;
	}
	controls.update();
	renderer.render(scene,camera);
}

function toggle() {
	//function invoked on button click
	if(rotating==0) {
		rotating=1;
	}
	else if (rotating==1) {
		rotating=0;
	}
}
/*
function onResize() {
	camera.aspect = window.innerWidth / window.innerHeight;
	camera.updateProjectionMatrix();
	renderer.setSize(window.innerWidth, window.innerHeight);
}
window.addEventListener('resize', onResize, false);
*/
